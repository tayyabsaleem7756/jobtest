# Generated by Django 3.2.15 on 2022-08-19 12:54

from django.db import migrations

from core.services.setup_db import SetupDbService


def setup_existing_companies(apps, schema_editor):
    Company = apps.get_model('companies', 'Company')
    Currency = apps.get_model('currencies', 'Currency')
    Block = apps.get_model('eligibility_criteria', 'Block')
    Workflow = apps.get_model('cards', 'Workflow')

    for company in Company.objects.all():
        currencies_created = Currency.objects.filter(company=company).count()
        eligibility_blocks_created = Block.objects.filter(company=company).count()
        kyc_workflows_created = Workflow.objects.filter(company=company).count()

        if currencies_created and eligibility_blocks_created and kyc_workflows_created:
            print(f'Company {company.name} is already setup')
            continue

        print(f'Setting up Company: {company.name}')
        try:
            SetupDbService(
                company_name=company.name,
                admin_emails=[],
                knowledgeable_reviewer_emails=[],
                financial_reviewer_emails=[]
            ).process()
            print(f'Completed Setting up Company: {company.name}')
        except Exception as e:
            print(f'Error occurred while Setting up Company: {company.name}: {e}')


class Migration(migrations.Migration):
    dependencies = [
        ('companies', '0021_auto_20220808_1109'),
        ('admin_users', '0005_adminuser_title'),
        ('agreements', '0008_applicantagreementdocument_gp_signing_complete'),
        ('cards', '0012_auto_20220621_0750'),
        ('currencies', '0002_alter_currencyrate_rate_date'),
        ('documents', '0048_funddocument_gp_signer'),
        ('eligibility_criteria', '0048_alter_eligibilitycriteriaresponse_investment_amount'),
        ('fund_marketing_pages', '0014_fundmarketingpagereviewer'),
        ('funds', '0033_remove_fund_gp_signer'),
        ('geographics', '0008_auto_20220812_1904'),
        ('investors', '0021_auto_20220427_1841'),
        ('kyc_records', '0042_auto_20220727_1643'),
        ('tax_records', '0012_alter_taxrecord_countries'),
        ('users', '0010_auto_20220622_1638'),
        ('workflows', '0019_auto_20220715_1830'),
        ('notifications', '0004_publishedfundusernotification'),
        ('payments', '0003_auto_20220627_1541'),
    ]

    operations = [
        # migrations.RunPython(setup_existing_companies, reverse_code=migrations.RunPython.noop),
    ]
