# Generated by Django 3.2.16 on 2023-05-02 19:17
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations, models
import django.db.models.deletion

ELEGIBILITY = 1

FINANCIAL_ELIGIBILITY_REVIEWER = 'Financial Eligibility Reviewer'
KNOWLEDGEABLE_ELIGIBILITY_REVIEWER = 'Knowledgeable Employee Eligibility Reviewer'
EXTERNAL_REVIEWER = 'External Reviewer'
INTERNAL_TAX_REVIEWER = 'Internal Tax Reviewer'
ALLOCATION_REVIEWER = 'Allocation Reviewer'
AGREEMENT_REVIEWER = 'Agreement Reviewer'
GENERAL_PARTNER_SIGNER = 'General Partner Signer'
CAPITAL_CALL_REVIEWER = 'Capital Call Reviewer'
DISTRIBUTION_NOTICE_REVIEWER = 'Distribution Notice Reviewer'
NO_REVIEW_REQUIRED = 'No Review Required'


# hardcoded, because I can't use the constants
groups_workflow = {
    3: 'Financial Eligibility Reviewer',
    5: 'External Reviewer',
    6: 'Agreement Reviewer',
    7: 'Allocation Reviewer',
    8: 'General Partner Signer',
    9: 'Internal Tax Reviewer',
    10: 'Capital Call Reviewer',
    11: 'Distribution Notice Reviewer',
}


"""
    General Partner Signer (GP Signing)                              
    Agreement Reviewer (Agreements)                                 
    Financial Eligibility Reviewer (AML/KYC)                     
    Knowledgeable Employee Eligibility Reviewer          
    External Reviewer (Tax Record)                                 
    Allocation Reviewer (Allocation)                                
    Internal Tax Reviewer (Internal Tax Review)                              
    Capital Call Reviewer (Capital Call)                              
    Distribution Notice Reviewer (Distribution Notice)      
"""


def migrate(apps, schema_editor):
    Task = apps.get_model('workflows', 'Task')
    Group = apps.get_model('auth', 'Group')
    EligibilityCriteriaResponse = apps.get_model('eligibility_criteria', 'EligibilityCriteriaResponse')
    tasks = Task.objects.all()
    for task in tasks:
        group = None
        workflow = task.workflow
        module = workflow.module
        if module in groups_workflow:
            group_name = groups_workflow[module]
            group = Group.objects.filter(name=group_name).first()
        if module == ELEGIBILITY:
            try:
                eligibility_response = EligibilityCriteriaResponse.objects.get(workflow=workflow)
            except ObjectDoesNotExist:
                continue
            is_knowledgeable = eligibility_response.is_knowledgeable
            is_financial = eligibility_response.is_financial
            if is_knowledgeable:
                group = Group.objects.filter(name=KNOWLEDGEABLE_ELIGIBILITY_REVIEWER).first()
            if not is_knowledgeable or is_financial:
                group = Group.objects.filter(name=FINANCIAL_ELIGIBILITY_REVIEWER).first()
        if group is not None:
            task.assigned_to_group = group
            task.save()


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('workflows', '0030_task_approval_date'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='task',
            name='assignees',
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_to_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='auth.group'),
        ),
        migrations.DeleteModel(
            name='TaskPermission',
        ),
        migrations.RunPython(migrate, lambda _, __: _)
    ]
