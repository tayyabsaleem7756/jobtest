# Generated by Django 3.2.13 on 2022-05-03 18:36

from django.db import migrations


def create_fund_vehicles(apps, schema_editor):
    Company = apps.get_model('companies', 'Company')

    try:
        sidecar = Company.objects.filter(name__iexact="sidecar").get()
        _build_fund_vehicle(apps, sidecar, "Sidecar Cayman Limited A")
        _build_fund_vehicle(apps, sidecar, "Sidecar Cayman Limited B")
    except:
        print("\nskipping sidecar")
    else:
        print("\ncreated feeders for Sidecar")
        backfill_share_classes(apps, schema_editor, sidecar)
    try:
        lasalle = Company.objects.Filter(name__iexact="lasalle").get()
        _build_fund_vehicle(apps, lasalle, "LaSalle Global Employee Co-Investment Fund L.P. A")
        _build_fund_vehicle(apps, lasalle, "LaSalle Global Employee Co-Investment Fund L.P. B")
    except:
        print("\nskipping lasalle")
    else:
        print("\ncreated feeders for LaSalle")
        backfill_share_classes(apps, schema_editor, lasalle)


def _build_fund_vehicle(apps, company, name):
    CompanyFundVehicle = apps.get_model('companies', 'CompanyFundVehicle')
    v = CompanyFundVehicle()
    v.company = company
    v.name = name
    v.save()


def backfill_share_classes(apps, schema_editor, company):
    Fund = apps.get_model("funds", "Fund")
    CompanyFundVehicle = apps.get_model("companies", "CompanyFundVehicle")
    FundShareClass = apps.get_model("funds", "FundShareClass")

    funds = Fund.objects.filter(company=company).all()
    vehicles = CompanyFundVehicle.objects.filter(company=company).all()
    for fund in funds:
        for v in vehicles:
            for share_class in [{"n":"A", "l": 0},
                                {"n": "B", "l": 2},
                                {"n": "C", "l": 3},
                                {"n": "D", "l": 4}]:
                fsc = FundShareClass()
                fsc.company = company
                fsc.fund = fund
                fsc.company_fund_vehicle = v
                fsc.display_name = "Feeder {} - {}".format(v.name[-1], share_class["n"])
                fsc.leverage = share_class["l"]
                fsc.legal_name = "{} - {}".format(v.name, share_class["n"])
                fsc.save()

class Migration(migrations.Migration):
    dependencies = [
        ('companies', '0015_companyfundvehicle'),
    ]

    operations = [
        migrations.RunPython(create_fund_vehicles),
    ]
