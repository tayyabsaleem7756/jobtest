# Generated by Django 3.2.11 on 2022-02-10 12:48

from django.contrib.auth.models import Group
from django.contrib.auth.models import Permission
from django.contrib.contenttypes.models import ContentType
from django.db import migrations

from api.admin_users.models import AdminUser
from api.companies.models import CompanyUser
from api.users.constants import GROUPS, PERMISSIONS, GROUP_TO_PERMISSION_CODE_MAP, ADMIN_GROUP_NAME


def create_groups(apps, schema_editor):
    groups_to_add = []
    for g_name in GROUPS:
        groups_to_add.append(Group(name=g_name))

    Group.objects.bulk_create(groups_to_add)


def delete_groups(apps, schema_editor):
    Group.objects.filter(name__in=GROUPS).delete()


def create_permissions(apps, schema_editor):
    permissions_to_add = []
    content_type = ContentType.objects.get_for_model(CompanyUser)
    for permission_code, permission_name in PERMISSIONS:
        permissions_to_add.append(
            Permission(
                codename=permission_code,
                name=permission_name,
                content_type=content_type,
            )
        )

    Permission.objects.bulk_create(permissions_to_add)


def delete_permissions(apps, schema_editor):
    permission_codes = [permission_code for permission_code, _ in PERMISSIONS]
    Permission.objects.filter(codename=permission_codes).delete()


def assign_required_permissions_to_groups(apps, schema_editor):

    for group_name, permission_code in GROUP_TO_PERMISSION_CODE_MAP.items():
        group = Group.objects.get(name=group_name)
        permissions_to_assign = Permission.objects.get(codename=permission_code)

        group.permissions.add(permissions_to_assign)


def remove_group_permissions(apps, schema_editor):
    pass


def remove_user_group(apps, schema_editor):
    pass


def assign_full_admin_group_to_current_admins(apps, schema_editor):
    AdminUser = apps.get_model('admin_users', 'AdminUser')
    company_admins = AdminUser.objects.all()
    full_access_admin_group = Group.objects.get(name=ADMIN_GROUP_NAME)
    for company_user in company_admins:
        company_user.user.groups.add(full_access_admin_group)


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0006_alter_retailuser_email'),
    ]

    operations = [
        migrations.RunPython(create_groups, reverse_code=delete_groups),
        migrations.RunPython(create_permissions, reverse_code=delete_permissions),
        migrations.RunPython(assign_required_permissions_to_groups, reverse_code=remove_group_permissions),
        migrations.RunPython(assign_full_admin_group_to_current_admins, reverse_code=remove_user_group),
    ]
